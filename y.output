Terminals unused in grammar

   FOR


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: identifiers COLON INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON ENUM L_PAREN identifiers R_PAREN

   10 identifiers: ident
   11            | ident COMMA identifiers

   12 ident: IDENT

   13 statements: statement SEMICOLON
   14           | statement SEMICOLON statements

   15 statement: var ASSIGN expression
   16          | IF bool_exp THEN statements ENDIF
   17          | IF bool_exp THEN statements ELSE statements ENDIF
   18          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   19          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   20          | READ var vars
   21          | WRITE var vars
   22          | CONTINUE
   23          | RETURN expression

   24 vars: %empty
   25     | COMMA var vars

   26 bool_exp: relation_and_exp
   27         | relation_and_exp OR bool_exp

   28 relation_and_exp: relation_exp
   29                 | relation_exp AND relation_and_exp

   30 relation_exp: expression comp expression
   31             | NOT expression comp expression
   32             | TRUE
   33             | NOT TRUE
   34             | FALSE
   35             | NOT FALSE
   36             | L_PAREN bool_exp R_PAREN
   37             | NOT L_PAREN bool_exp R_PAREN

   38 comp: EQ
   39     | NEQ
   40     | LT
   41     | GT
   42     | LTE
   43     | GTE

   44 expression: multiplicative_expr
   45           | multiplicative_expr ADD expression
   46           | multiplicative_expr SUB expression

   47 multiplicative_expr: term
   48                    | term MULT multiplicative_expr
   49                    | term DIV multiplicative_expr
   50                    | term MOD multiplicative_expr

   51 term: term_a
   52     | term_b

   53 term_a: var
   54       | SUB var
   55       | NUMBER
   56       | SUB NUMBER
   57       | L_PAREN expression R_PAREN
   58       | SUB L_PAREN expression R_PAREN

   59 term_b: ident L_PAREN expr R_PAREN

   60 expr: expression
   61     | expression COMMA expr
   62     | %empty

   63 var: ident
   64    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 7 8
ARRAY (266) 8
ENUM (267) 9
OF (268) 8
IF (269) 16 17
THEN (270) 16 17
ENDIF (271) 16 17
ELSE (272) 17
FOR (273)
WHILE (274) 18 19
DO (275) 19
BEGINLOOP (276) 18 19
ENDLOOP (277) 18 19
CONTINUE (278) 22
READ (279) 20
WRITE (280) 21
AND (281) 29
OR (282) 27
NOT (283) 31 33 35 37
TRUE (284) 32 33
FALSE (285) 34 35
RETURN (286) 23
SEMICOLON (287) 4 6 13 14
COLON (288) 7 8 9
COMMA (289) 11 25 61
L_PAREN (290) 9 36 37 57 58 59
R_PAREN (291) 9 36 37 57 58 59
L_SQUARE_BRACKET (292) 8 64
R_SQUARE_BRACKET (293) 8 64
ASSIGN (294) 15
IDENT (295) 12
NUMBER (296) 8 55 56
LT (297) 40
LTE (298) 42
GT (299) 41
GTE (300) 43
EQ (301) 38
NEQ (302) 39
ADD (303) 45
SUB (304) 46 54 56 58
MULT (305) 48
DIV (306) 49
MOD (307) 50


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
declarations (57)
    on left: 5 6, on right: 4 6
declaration (58)
    on left: 7 8 9, on right: 6
identifiers (59)
    on left: 10 11, on right: 7 8 9 11
ident (60)
    on left: 12, on right: 4 10 11 59 63 64
statements (61)
    on left: 13 14, on right: 4 14 16 17 18 19
statement (62)
    on left: 15 16 17 18 19 20 21 22 23, on right: 13 14
vars (63)
    on left: 24 25, on right: 20 21 25
bool_exp (64)
    on left: 26 27, on right: 16 17 18 19 27 36 37
relation_and_exp (65)
    on left: 28 29, on right: 26 27 29
relation_exp (66)
    on left: 30 31 32 33 34 35 36 37, on right: 28 29
comp (67)
    on left: 38 39 40 41 42 43, on right: 30 31
expression (68)
    on left: 44 45 46, on right: 15 23 30 31 45 46 57 58 60 61 64
multiplicative_expr (69)
    on left: 47 48 49 50, on right: 44 45 46 48 49 50
term (70)
    on left: 51 52, on right: 47 48 49 50
term_a (71)
    on left: 53 54 55 56 57 58, on right: 51
term_b (72)
    on left: 59, on right: 52
expr (73)
    on left: 60 61 62, on right: 59 61
var (74)
    on left: 63 64, on right: 15 20 21 25 53 54


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 4


State 5

   12 ident: IDENT .

    $default  reduce using rule 12 (ident)


State 6

    4 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 9

    4 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 11

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: identifiers . COLON INTEGER
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers . COLON ENUM L_PAREN identifiers R_PAREN

    COLON  shift, and go to state 17


State 14

   10 identifiers: ident .
   11            | ident . COMMA identifiers

    COMMA  shift, and go to state 18

    $default  reduce using rule 10 (identifiers)


State 15

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 17

    7 declaration: identifiers COLON . INTEGER
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON . ENUM L_PAREN identifiers R_PAREN

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22
    ENUM     shift, and go to state 23


State 18

   11 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 5

    identifiers  go to state 24
    ident        go to state 14


State 19

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 25
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 20

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 21

    7 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 22

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 23

    9 declaration: identifiers COLON ENUM . L_PAREN identifiers R_PAREN

    L_PAREN  shift, and go to state 27


State 24

   11 identifiers: ident COMMA identifiers .

    $default  reduce using rule 11 (identifiers)


State 25

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 28


State 26

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 27

    9 declaration: identifiers COLON ENUM L_PAREN . identifiers R_PAREN

    IDENT  shift, and go to state 5

    identifiers  go to state 30
    ident        go to state 14


State 28

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 31


State 29

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 30

    9 declaration: identifiers COLON ENUM L_PAREN identifiers . R_PAREN

    R_PAREN  shift, and go to state 33


State 31

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    ident       go to state 41
    statements  go to state 42
    statement   go to state 43
    var         go to state 44


State 32

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 45


State 33

    9 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN .

    $default  reduce using rule 9 (declaration)


State 34

   16 statement: IF . bool_exp THEN statements ENDIF
   17          | IF . bool_exp THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    bool_exp             go to state 53
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 56
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 35

   18 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    bool_exp             go to state 62
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 56
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 36

   19 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 63


State 37

   22 statement: CONTINUE .

    $default  reduce using rule 22 (statement)


State 38

   20 statement: READ . var vars

    IDENT  shift, and go to state 5

    ident  go to state 41
    var    go to state 64


State 39

   21 statement: WRITE . var vars

    IDENT  shift, and go to state 5

    ident  go to state 41
    var    go to state 65


State 40

   23 statement: RETURN . expression

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    expression           go to state 67
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 41

   63 var: ident .
   64    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 63 (var)


State 42

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 69


State 43

   13 statements: statement . SEMICOLON
   14           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 70


State 44

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 71


State 45

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 72


State 46

   31 relation_exp: NOT . expression comp expression
   33             | NOT . TRUE
   35             | NOT . FALSE
   37             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 73
    FALSE    shift, and go to state 74
    L_PAREN  shift, and go to state 75
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    expression           go to state 76
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 47

   32 relation_exp: TRUE .

    $default  reduce using rule 32 (relation_exp)


State 48

   34 relation_exp: FALSE .

    $default  reduce using rule 34 (relation_exp)


State 49

   36 relation_exp: L_PAREN . bool_exp R_PAREN
   57 term_a: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    bool_exp             go to state 77
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 78
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 50

   55 term_a: NUMBER .

    $default  reduce using rule 55 (term_a)


State 51

   54 term_a: SUB . var
   56       | SUB . NUMBER
   58       | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 79
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 80

    ident  go to state 41
    var    go to state 81


State 52

   59 term_b: ident . L_PAREN expr R_PAREN
   63 var: ident .
   64    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 82
    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 63 (var)


State 53

   16 statement: IF bool_exp . THEN statements ENDIF
   17          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 83


State 54

   26 bool_exp: relation_and_exp .
   27         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 84

    $default  reduce using rule 26 (bool_exp)


State 55

   28 relation_and_exp: relation_exp .
   29                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 85

    $default  reduce using rule 28 (relation_and_exp)


State 56

   30 relation_exp: expression . comp expression

    LT   shift, and go to state 86
    LTE  shift, and go to state 87
    GT   shift, and go to state 88
    GTE  shift, and go to state 89
    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91

    comp  go to state 92


State 57

   44 expression: multiplicative_expr .
   45           | multiplicative_expr . ADD expression
   46           | multiplicative_expr . SUB expression

    ADD  shift, and go to state 93
    SUB  shift, and go to state 94

    $default  reduce using rule 44 (expression)


State 58

   47 multiplicative_expr: term .
   48                    | term . MULT multiplicative_expr
   49                    | term . DIV multiplicative_expr
   50                    | term . MOD multiplicative_expr

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 47 (multiplicative_expr)


State 59

   51 term: term_a .

    $default  reduce using rule 51 (term)


State 60

   52 term: term_b .

    $default  reduce using rule 52 (term)


State 61

   53 term_a: var .

    $default  reduce using rule 53 (term_a)


State 62

   18 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 98


State 63

   19 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    ident       go to state 41
    statements  go to state 99
    statement   go to state 43
    var         go to state 44


State 64

   20 statement: READ var . vars

    COMMA  shift, and go to state 100

    $default  reduce using rule 24 (vars)

    vars  go to state 101


State 65

   21 statement: WRITE var . vars

    COMMA  shift, and go to state 100

    $default  reduce using rule 24 (vars)

    vars  go to state 102


State 66

   57 term_a: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    expression           go to state 103
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 67

   23 statement: RETURN expression .

    $default  reduce using rule 23 (statement)


State 68

   64 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    expression           go to state 104
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 69

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 70

   13 statements: statement SEMICOLON .
   14           | statement SEMICOLON . statements

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    $default  reduce using rule 13 (statements)

    ident       go to state 41
    statements  go to state 105
    statement   go to state 43
    var         go to state 44


State 71

   15 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    expression           go to state 106
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 72

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 73

   33 relation_exp: NOT TRUE .

    $default  reduce using rule 33 (relation_exp)


State 74

   35 relation_exp: NOT FALSE .

    $default  reduce using rule 35 (relation_exp)


State 75

   37 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   57 term_a: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    bool_exp             go to state 107
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 78
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 76

   31 relation_exp: NOT expression . comp expression

    LT   shift, and go to state 86
    LTE  shift, and go to state 87
    GT   shift, and go to state 88
    GTE  shift, and go to state 89
    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91

    comp  go to state 108


State 77

   36 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 109


State 78

   30 relation_exp: expression . comp expression
   57 term_a: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 110
    LT       shift, and go to state 86
    LTE      shift, and go to state 87
    GT       shift, and go to state 88
    GTE      shift, and go to state 89
    EQ       shift, and go to state 90
    NEQ      shift, and go to state 91

    comp  go to state 92


State 79

   58 term_a: SUB L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    expression           go to state 111
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 80

   56 term_a: SUB NUMBER .

    $default  reduce using rule 56 (term_a)


State 81

   54 term_a: SUB var .

    $default  reduce using rule 54 (term_a)


State 82

   59 term_b: ident L_PAREN . expr R_PAREN

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    $default  reduce using rule 62 (expr)

    ident                go to state 52
    expression           go to state 112
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    expr                 go to state 113
    var                  go to state 61


State 83

   16 statement: IF bool_exp THEN . statements ENDIF
   17          | IF bool_exp THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    ident       go to state 41
    statements  go to state 114
    statement   go to state 43
    var         go to state 44


State 84

   27 bool_exp: relation_and_exp OR . bool_exp

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    bool_exp             go to state 115
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 56
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 85

   29 relation_and_exp: relation_exp AND . relation_and_exp

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    relation_and_exp     go to state 116
    relation_exp         go to state 55
    expression           go to state 56
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 86

   40 comp: LT .

    $default  reduce using rule 40 (comp)


State 87

   42 comp: LTE .

    $default  reduce using rule 42 (comp)


State 88

   41 comp: GT .

    $default  reduce using rule 41 (comp)


State 89

   43 comp: GTE .

    $default  reduce using rule 43 (comp)


State 90

   38 comp: EQ .

    $default  reduce using rule 38 (comp)


State 91

   39 comp: NEQ .

    $default  reduce using rule 39 (comp)


State 92

   30 relation_exp: expression comp . expression

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    expression           go to state 117
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 93

   45 expression: multiplicative_expr ADD . expression

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    expression           go to state 118
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 94

   46 expression: multiplicative_expr SUB . expression

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    expression           go to state 119
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 95

   48 multiplicative_expr: term MULT . multiplicative_expr

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    multiplicative_expr  go to state 120
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 96

   49 multiplicative_expr: term DIV . multiplicative_expr

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    multiplicative_expr  go to state 121
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 97

   50 multiplicative_expr: term MOD . multiplicative_expr

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    multiplicative_expr  go to state 122
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 98

   18 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    ident       go to state 41
    statements  go to state 123
    statement   go to state 43
    var         go to state 44


State 99

   19 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 124


State 100

   25 vars: COMMA . var vars

    IDENT  shift, and go to state 5

    ident  go to state 41
    var    go to state 125


State 101

   20 statement: READ var vars .

    $default  reduce using rule 20 (statement)


State 102

   21 statement: WRITE var vars .

    $default  reduce using rule 21 (statement)


State 103

   57 term_a: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 110


State 104

   64 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 126


State 105

   14 statements: statement SEMICOLON statements .

    $default  reduce using rule 14 (statements)


State 106

   15 statement: var ASSIGN expression .

    $default  reduce using rule 15 (statement)


State 107

   37 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 127


State 108

   31 relation_exp: NOT expression comp . expression

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    expression           go to state 128
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 109

   36 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 36 (relation_exp)


State 110

   57 term_a: L_PAREN expression R_PAREN .

    $default  reduce using rule 57 (term_a)


State 111

   58 term_a: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 129


State 112

   60 expr: expression .
   61     | expression . COMMA expr

    COMMA  shift, and go to state 130

    $default  reduce using rule 60 (expr)


State 113

   59 term_b: ident L_PAREN expr . R_PAREN

    R_PAREN  shift, and go to state 131


State 114

   16 statement: IF bool_exp THEN statements . ENDIF
   17          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 132
    ELSE   shift, and go to state 133


State 115

   27 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 27 (bool_exp)


State 116

   29 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 29 (relation_and_exp)


State 117

   30 relation_exp: expression comp expression .

    $default  reduce using rule 30 (relation_exp)


State 118

   45 expression: multiplicative_expr ADD expression .

    $default  reduce using rule 45 (expression)


State 119

   46 expression: multiplicative_expr SUB expression .

    $default  reduce using rule 46 (expression)


State 120

   48 multiplicative_expr: term MULT multiplicative_expr .

    $default  reduce using rule 48 (multiplicative_expr)


State 121

   49 multiplicative_expr: term DIV multiplicative_expr .

    $default  reduce using rule 49 (multiplicative_expr)


State 122

   50 multiplicative_expr: term MOD multiplicative_expr .

    $default  reduce using rule 50 (multiplicative_expr)


State 123

   18 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 134


State 124

   19 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 135


State 125

   25 vars: COMMA var . vars

    COMMA  shift, and go to state 100

    $default  reduce using rule 24 (vars)

    vars  go to state 136


State 126

   64 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 64 (var)


State 127

   37 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 37 (relation_exp)


State 128

   31 relation_exp: NOT expression comp expression .

    $default  reduce using rule 31 (relation_exp)


State 129

   58 term_a: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 58 (term_a)


State 130

   61 expr: expression COMMA . expr

    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    $default  reduce using rule 62 (expr)

    ident                go to state 52
    expression           go to state 112
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    expr                 go to state 137
    var                  go to state 61


State 131

   59 term_b: ident L_PAREN expr R_PAREN .

    $default  reduce using rule 59 (term_b)


State 132

   16 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 16 (statement)


State 133

   17 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    ident       go to state 41
    statements  go to state 138
    statement   go to state 43
    var         go to state 44


State 134

   18 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 18 (statement)


State 135

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 52
    bool_exp             go to state 139
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 56
    multiplicative_expr  go to state 57
    term                 go to state 58
    term_a               go to state 59
    term_b               go to state 60
    var                  go to state 61


State 136

   25 vars: COMMA var vars .

    $default  reduce using rule 25 (vars)


State 137

   61 expr: expression COMMA expr .

    $default  reduce using rule 61 (expr)


State 138

   17 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 140


State 139

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 19 (statement)


State 140

   17 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 17 (statement)
